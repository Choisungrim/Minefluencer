규칙
 
* 모든 JS 파일은 외부파일로 사용한다.
* 페이지 하나 당 폴더 하나를 만들어 html,css,js 폴더 내에서 파일을 따로 분리한다.
* css 보다 node-sass를 사용한다 (배우기 쉽고 css랑 똑같음)
* 로고파일은 모든 폴더에 위치한다.
* 코드를 수정하면 프로젝트 히스토리에 기록한다.
* 구글링을 적극적으로 활용해도 되지만 밑에 작성한 규칙에 맞게 코드를 수정한다.
 
_ 2주 씩 번갈아 가면서 F B 영역 구분지어 진행
_ 구현 완료 하면 2주씩 번갈아 가며 css작업, 테스터 작업 진행
 
 
________________
JS 코딩컨벤션
변수
* 모든 변수는 let , const 로 선언한다.
* 모든 변수는 블록의 상단에 위치 시킨다.
* 변수는 const로 선언하고 값이 바뀌어야 하는 것은 let으로 선언한다.
* 변수의 이름은 간단하고 이해하기 쉽게 선언한다.
* 한국어로 읽어지는 변수는 선언하지 않는다.
 
반복문, 조건문
* 중괄호는 하나의 구문만을 포함하고 있더라도 모든 제어문 (if, else, for, do, while..)에 사용되어야 한다.
* 한 줄에는 하나의 구문만을 작성한다.
* 모든 구문의 끝에는 세미콜론을 붙인다.
* 조건문에는 조건식과 조건식에 실행 될 코드를 완벽하게 분리한다. {} 코드블럭 사용
* 반복자 변수는 let으로 선언한다.
* ==, != 보다는 ===, !==를 사용한다.
 
칸 공백
* if, for, catch와 같은 키워드와 소괄호 사이 공백을 준다.
* function 은 붙여서 사용한다.
 
배열, 객체
* 배열을 선언할 때는 리터럴 구문을 사용한다. []
* 되도록 배열은 숫자의 값만 사용하고 다른 데이터 타입을 넣고 싶으면 객체를 사용한다.
* 배열 또는 객체에 들어가는 문자열은 큰 따옴표 (“”)를 씌운다
 
함수
* 함수 선언식을 사용한다.
* 함수 이외의 블록(if, while) 안에서 함수를 선언하지 않는다.
* 함수에 이름이 필요한 경우는 const를 사용한다.
 
문자열
* 문자열을 선언할 때는 큰 따옴표( “” )를 사용한다.
* 문자열 내의 변수가 들어가는 상황일 때 템플릿리터럴을 사용한다 (``)
 
네이밍 컨벤션
* 단일 글자 (a,i) 는 반복문 내에서만 사용한다.
* 약어는 모두 대문자로 처리한다 (const SMSContainer)
* 약어가 아닌 단어는 줄임말을 사용하지 않는다.
* 상수(const) 는 모두 대문자로 표기하며 한 단어가 끝나면 스네이크 표기법을 사용한다 (const SMS_CONTAINER)
 
 
 
05.11 중요한 내용)
1. 숫자는 객체로 정의 검지검지~
2. 전역변수는 될 수 있는대로 CONST 로 정의 / 어쩔 수 없는 상황이 온다면 let으로 정의
- 반복문 안에서의 변수는 let으로 정의(지역변수)
3. 변수명은 최대한 알아보기 쉽게
4. 항상 대문자로 작성해야 될 것들.
- 약어 e.g) KFC
- const 로 정의되는 변수명 e.g) const GLASSES
5. id, class는 소문자로 작성 => css에서 쓰일 때 편리합니다
6. saas 공부하기
________________
CSS 코딩컨벤션


속성
   * CSS 작성 순서 부모속성 > 자식(본인) 속성




.share {
display
justify-content
align-items
flex


position
z-index
left
right
top
bottom


margin
box-sizing
padding


border
width
height
background


font


transition
}


	

칸 공백
   * 선택자와 중괄호 사이 1 칸 띄어쓰기를 사용한다.
   * 속성과 value값은 콜론(:)을 기준으로 1 칸 띄어쓰기를 사용한다.




#header_top {
margin: 0 auto;
width: 120rem;
height: 5rem;
}


	

네이밍 컨벤션
   * id, class는 스네이크 케이스로 작성한다.
   * 약어는 모두 대문자로 처리한다.


<div id=”header_top” class=”share”>
<div class=”SNS_container”>
<span>facebook</span>
<span>instagram</span>
</div>
</div>


	

________________


Java 코딩컨벤션
 
자바 소스 파일의 첫 번째 줄은 Package 문이다. 그 후에 Import 문이 뒤따라 나온다.
주석
   * 두 가지 구문이상의 주석은 /* */ 로 표현한다.
   * 한 줄에만 사용되는 주석은 //을 이용한다.




/*
a를 2로 나눈 나머지를 출력하는 if문 작성
a의 값은 Scanner를 통해 System.in(입력) 한다.
*/
 
if (a % 2 == 0) {
        return true; // 나머지가 0일 때 true 반환
} else {
        return false; // 나머지가 0이 아닐 때 false 반환
}


	

   * 문서화 or Test Ant 등에서 사용되는 두 가지 구문이상의 주석은
/** */ 로 표현한다.


/**
*       This class Member is a class that contains information about all users in a web page.
*       Testing Area
*/
	

칸 공백
   * 모든 구문의 자식요소는 1 칸 들여쓰기를 사용한다.
   * 들여쓰기 1 칸(Tab) = 띄어쓰기 4 칸(space)




while (true) {
        a++; 
        b++;
        c++;
}


	

   * 모든 연산자를 기준으로 좌우 간격을 1 칸 띄어쓰기를 사용한다.
   * 연산자를 기준으로 왼편에 위치한 변수, 함수, 클래스는 붙여서 사용한다.




a+b+c=d;
a + b = c;
preorder(preorder + postorder) = postorder


	

   * if , else, else if 문에 대해서는 1 칸 띄어쓰기를 사용한다.




if (a == b) {
        return 0;
} else {
        return 1;
}


	

변수
   * 모든 변수는 public – protected – default – private 순서로 선언한다.
   * 전역변수는 클래스 내부 최상위에 선언한다.




public static int a;
public int a;
protected static int a;
protected int a;
static int a;
int a;
private static int a;
private int a;


	

   * 동일한 파일 내에서 변수명은 중복해서 사용하지 않는다.




int j = 0;
int I = 0;
        for (int I = 0; I < 100; I++) {
                int temp = i;
                I = j;
        } // 끝나는 지점은 해당 명령어(조건문 반복문 ... 등) 가 호출된 시점.


	

   * 가능하면 1 , 0 , -1을 제외한 모든 숫자는 변수에 담아서 사용한다.




for (int I = 0; I < a.length; I++)
Getter // Setter (캡슐화, 정보은닉의 용도)


	

   * 증감연산자는 한 구문 내에서 사용은 지양한다.




for (int I = 0; I < 100; I++) {
        j++; k++;
}


	



 
네이밍 컨벤션
   * 클래스 이름은 명사이어야 하며, 항상 첫 글자는 대문자 이어야 한다.
   * 복합 단어일 경우 각 단어의 첫 글자는 대문자이어야 한다. ( 카멜케이스 )
   * 클래스 이름은 간단하고 명시적으로 작성해야 한다.




Class CarSort; // 복합단어
Class Member; // 명사


	

   * 변수 이름의 첫 번째 문자는 소문자로 시작하고
   * 각각의 내부 단어의 첫 번째 문자는 대문자로 시작해야한다. (카멜케이스)




char c;
float myWeight;


	



   * 클래스 상수로 선언된 변수들과 ANSI 상수의 이름은 모두 대문자로 쓰고
   * 각각의 단어는 언더바 _ 로 분리 해야 한다. (스네이크 케이스)




static final int MAX_SIZE = 999;